{"version":3,"file":"static/js/483.82181af0.chunk.js","mappings":"yOACA,EAAuB,mBAAvB,EAAiD,mB,SCmDjD,EA7Ca,SAAC,GAAY,IAAVA,EAAS,EAATA,GACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAA0BJ,EAAAA,EAAAA,UAASK,EAAAA,GAAAA,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,OARAC,EAAAA,EAAAA,YAAU,WACRD,EAASF,EAAAA,GAAAA,UACTI,EAAAA,EAAAA,IAAcV,GACXW,MAAK,SAAAC,GAAG,OAAIT,EAASS,EAAIC,SACzBC,OAAM,SAAAV,GAAG,OAAIC,EAAOD,KAAMI,EAASF,EAAAA,GAAAA,WACtCE,EAASF,EAAAA,GAAAA,YACR,CAACN,KAGF,gCACGO,IAAUD,EAAAA,GAAAA,UAAkB,SAACS,EAAA,EAAD,IAC5BR,IAAUD,EAAAA,GAAAA,WAAmB,8BAAMF,EAAN,OACZ,IAAjBF,EAAMc,SAAgB,mCACtBT,IAAUD,EAAAA,GAAAA,WACT,wBACGJ,GACCA,EAAMe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcpB,EAAS,EAATA,GAC1C,OACE,gBAAaqB,UAAWC,EAAxB,WACE,gBACEC,IAAKH,EAAeI,EAAAA,GAAOJ,EAAeK,EAAAA,GAC1CC,IAAI,GACJC,MAAO,MAET,4BACE,cAAGN,UAAWC,EAAd,SAAuBH,KACvB,cAAGE,UAAWC,EAAd,SAAuBJ,SARlBlB","sources":["webpack://react-homework-template/./src/components/MovieDetails/Cast/Cast.module.css?0eec","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__xyH93\",\"text\":\"Cast_text__Gd-RB\"};","import Loader from 'components/Loader';\nimport { IMG, PATH, Status } from 'helpers/helpers';\nimport { useEffect, useState } from 'react';\nimport { fetchByIdCast } from 'service/api';\nimport s from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nconst Cast = ({ id }) => {\n  const [casts, setCasts] = useState([]);\n  const [err, setErr] = useState(null);\n  const [state, setState] = useState(Status.IDLE);\n  useEffect(() => {\n    setState(Status.PENDING);\n    fetchByIdCast(id)\n      .then(res => setCasts(res.cast))\n      .catch(err => setErr(err), setState(Status.REJECTED));\n    setState(Status.RESOLVED);\n  }, [id]);\n\n  return (\n    <>\n      {state === Status.PENDING && <Loader />}\n      {state === Status.REJECTED && <p>`${err}`</p>}\n      {casts.length === 0 && <p>No info</p>}\n      {state === Status.RESOLVED && (\n        <ul>\n          {casts &&\n            casts.map(({ name, character, profile_path, id }) => {\n              return (\n                <li key={id} className={s.list}>\n                  <img\n                    src={profile_path ? PATH + profile_path : IMG}\n                    alt=\"\"\n                    width={70}\n                  />\n                  <div>\n                    <p className={s.text}>{character}</p>\n                    <p className={s.text}>{name}</p>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n"],"names":["id","useState","casts","setCasts","err","setErr","Status","state","setState","useEffect","fetchByIdCast","then","res","cast","catch","Loader","length","map","name","character","profile_path","className","s","src","PATH","IMG","alt","width"],"sourceRoot":""}