{"version":3,"file":"static/js/72.ef016689.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieCard/MovieCard.module.css?bd62","components/MovieDetails/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","helpers/helpers.js","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"circle\":\"Loader_circle__DzuXv\"};","import { Circles } from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.circle}>\n      <Circles height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieCard_img__Cc+08\",\"wrap\":\"MovieCard_wrap__P7j00\",\"text\":\"MovieCard_text__alWKY\",\"textInf\":\"MovieCard_textInf__HgihN\",\"wraper\":\"MovieCard_wraper__5GeRN\",\"overview\":\"MovieCard_overview__jewAI\",\"container\":\"MovieCard_container__n6svd\",\"button\":\"MovieCard_button__3hXD2\",\"list\":\"MovieCard_list__A5n7H\",\"item\":\"MovieCard_item__4JL2L\",\"link\":\"MovieCard_link__lXLXd\"};","import { IMG_MOVIE, PATH } from 'helpers/helpers';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './MovieCard.module.css';\n\nconst MovieCard = ({ movie, children }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  function getGenres(g) {\n    if (g) {\n      return g.map(genre => genre.name).join(', ');\n    }\n    return '';\n  }\n  const location = useLocation();\n  console.log(location);\n  console.log(location?.state?.from);\n  return (\n    <>\n      <div className={s.container}>\n        <Link to={location?.state?.from ?? '/'}>\n          <button type=\"button\" className={s.button}>\n            Go back\n          </button>\n        </Link>\n\n        <div className={s.wrap}>\n          <img\n            src={poster_path ? PATH + poster_path : IMG_MOVIE}\n            alt={original_title}\n            className={s.img}\n          />\n          <div>\n            <div className={s.wraper}>\n              <p className={s.text}>\n                {original_title} {`(${release_date.substr(0, 4)})`}\n              </p>\n            </div>\n            <div className={s.wraper}>\n              <p className={s.text}>User score: {vote_average * 10}%</p>\n            </div>\n            <div className={s.overview}>\n              <p className={s.text}>Overview</p>\n              <p className={s.text}>{overview}</p>\n            </div>\n            <div className={s.overview}>\n              <p className={s.text}>Genres</p>\n              <p className={s.text}>{getGenres(genres)}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {children}\n    </>\n  );\n};\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    movie: PropTypes.shape({\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          name: PropTypes.string.isRequired,\n        })\n      ),\n      overview: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    }),\n    children: PropTypes.arrayOf(\n      PropTypes.shape({\n        child: PropTypes.element,\n      })\n    ),\n  }),\n};\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieDetails_list__y5Rs9\",\"item\":\"MovieDetails_item__9ATw3\",\"link\":\"MovieDetails_link__wf74g\"};","import Loader from 'components/Loader';\nimport MovieCard from 'components/MovieDetails/MovieCard';\nimport { Status } from 'helpers/helpers';\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchByIdMovie } from 'service/api';\nimport s from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nconst MovieDetails = () => {\n  const [err, setErr] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const [state, setState] = useState(Status.IDLE);\n  const location = useLocation();\n\n  useEffect(() => {\n    setState(Status.PENDING);\n    fetchByIdMovie(id)\n      .then(setMovie)\n      .catch(err => setErr(err), setState(Status.REJECTED));\n    setState(Status.RESOLVED);\n  }, [id]);\n\n  return (\n    <>\n      {state === Status.PENDING && <Loader />}\n      {state === Status.REJECTED && <p>`${err}`</p>}\n      {movie === null && <p> No information</p>}\n      {movie && state === Status.RESOLVED && (\n        <MovieCard movie={movie}>\n          <div className={s.container}>\n            <h3 className={s.textInf}>Aditional Information</h3>\n            <ul className={s.list}>\n              <li className={s.item}>\n                <NavLink\n                  to=\"cast\"\n                  className={s.link}\n                  state={{ from: location }}\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li className={s.item}>\n                <NavLink\n                  to=\"reviews\"\n                  className={s.link}\n                  state={{ from: location }}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<p>Loading...</p>}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast id={id} />} />\n              <Route path=\"reviews\" element={<Reviews id={id} />} />\n            </Routes>\n          </Suspense>\n        </MovieCard>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const Status = {\n  IDLE: 'idle',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n  PENDING: 'pending',\n};\n\nexport const PATH = 'https://image.tmdb.org/t/p/w1280';\n\nexport const IMG_MOVIE =\n  'https://b.rgbimg.com/users/h/hi/hisks/300/mhYExIC.jpg';\nexport const IMG =\n  'https://parkridgevet.com.au/wp-content/uploads/2020/11/Profile-300x300.png';\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f7834c478b364ada45f63f10c4befe7b';\n\nexport const getMovies = axios.create({\n  url: '',\n  baseURL: BASE_URL,\n\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const fetchMoviesTrend = async () => {\n  try {\n    const { data } = await getMovies('/trending/all/day', {});\n\n    return data.results;\n  } catch (error) {\n    return Promise.reject('There is no information ...');\n  }\n};\n\nexport const fetchSeachMovie = async name => {\n  if (name === '') {\n    return;\n  }\n  try {\n    const { data } = await getMovies('/search/movie', {\n      params: { query: name },\n    });\n\n    return data.results;\n  } catch (error) {\n    return Promise.reject('There is no information t...');\n  }\n};\n\nexport const fetchByIdMovie = async id => {\n  if (id === '') {\n    return;\n  }\n  try {\n    const { data } = await getMovies(`/movie/${id}`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information ...');\n  }\n};\n\nexport const fetchByIdReview = async id => {\n  if (id === '') {\n    return;\n  }\n  try {\n    const { data } = await getMovies(`/movie/${id}/reviews`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information ...');\n  }\n};\n\nexport const fetchByIdCast = async id => {\n  if (id === '') {\n    return;\n  }\n  try {\n    const { data } = await getMovies(`/movie/${id}/credits`, {});\n\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information ...');\n  }\n};\n"],"names":["className","s","height","width","color","ariaLabel","movie","children","poster_path","original_title","release_date","vote_average","overview","genres","g","location","useLocation","console","log","state","from","to","type","src","PATH","IMG_MOVIE","alt","substr","map","genre","name","join","Cast","lazy","Reviews","useState","err","setErr","setMovie","id","useParams","Status","setState","useEffect","fetchByIdMovie","then","catch","Loader","Suspense","fallback","path","element","IDLE","REJECTED","RESOLVED","PENDING","IMG","getMovies","axios","url","baseURL","params","api_key","language","include_adult","fetchMoviesTrend","data","results","Promise","reject","fetchSeachMovie","query","fetchByIdReview","fetchByIdCast"],"sourceRoot":""}